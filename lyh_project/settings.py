"""
Django settings for zuoye_1222 project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!!nbjzc(r0ruq&c&ix2=5-vtlj^q(9o_zrejz(-2m5u)8ehxuo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hc',
]
from django.middleware.common import CommonMiddleware


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middle.middleware_login.Middleware_login',    # 登录验证session的中间件
    'middle.middleware_login.Middleware_auth',   # 验证权限登录用户session的中间件
]

ROOT_URLCONF = 'lyh_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lyh_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

DATA_LIST = ['kernel','mem_total','id','num_cpus','localhost','host','ipv4','os']
MES_DICT = [
    'id',
    {'messages': {
                  'kernel':'',
                  'os_id':'',
                  'ecsname':'',
                  'hostname':'',
                  'eth0_network':'',
                  'cpu':'',
                  'mem':''}
    }
]
# 验证码信息
CODEIMG='fsadcodef'


API = 'https://192.168.1.11:8010/'
SALT_CLIENT = '*'
SALT_TEST = 'grains.items'

# 用户登录的session
white_list = ['/login/','/index/','/register/','/admin/', '/authority/demo/','/delete_session/','/code.html']

SESSION_COOKIE_AGE=60*30  # 保存30分钟的session
# SESSION_EXPIRE_AT_BROWSER_CLOSE=False：会话cookie可以在用户浏览器中保持有效期。True：关闭浏览器，则Cookie失效。


# 白名单 权限登录的 URL 类似权限主页
AUTH_LIST = ['/login/','/authority/demo/','/register/','/admin/','/delete_session/','/code.html']

import djcelery
from celery.schedules import crontab
from datetime import timedelta
djcelery.setup_loader()

CELERY_TIMEZONE = TIME_ZONE
BROKER_URL='redis://192.168.1.11:6379/6'                       # redis 地址 发送端口
CELERY_RESULT_BACKEND = 'redis://192.168.1.11:6379/8'          # redis 接收端口

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERY_IMPORTS = ['publishing_system.task',]   # 应用名目录下的.task ，主要看有没有task.py文件
# CELERY_MAX_TASKS_PRR_CHILD = 10
CELERYD_MAX_TASKS_PER_CHILD = 100 # 每个worker最多执行万100个任务就会被销毁，可防止内存泄露
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
CELERYD_TASK_TIME_LIMIT = 1800  # 单个任务的运行时间不超过此值，否则会被SIGKILL 信号杀死
CELERYD_CONCURRENCY = 20  # 并发worker数
CELERYD_FORCE_EXECV = True    # 非常重要,有些情况下可以防止死锁